class Sys::FileTest {
  use Sys::IO;
  use Sys::IO::Stat;
  use Sys::IO::Constant as IO;
  use Sys::User;
  use Sys;
  use Fn;
  
  static method A : double ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new($file);
    
    my $result_time = $stat->A;
    
    return $result_time;
  }
  
  static method C : double ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new($file);
    my $result_time = $stat->C;
    
    return $result_time;
  }
  
  static method M : double ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new($file);
    
    my $result_time = $stat->M;
    
    return $result_time;
  }
  
  static method O : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->O;
    }
    
    return $ok;
  }
  
  static method R : int ($file : string) {
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Character device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->R;
    }
    
    return $ok;
  }
  
  static method S : int ($file : string) {
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new($file);
    
    my $ok = $stat->S;
    
    return $ok;
  }
  
  static method W : int ($file : string) {
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Character device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->W;
    }
    
    return $ok;
  }
  
  static method X : int ($file : string) {
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Character device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->X;
    }
    
    return $ok;
  }
  
  static method b : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Block device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->b;
    }
    
    return $ok;
  }
  
  static method c : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Character device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->c;
    }
    
    return $ok;
  }
  
  static method d : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->d;
    }
    
    return $ok;
  }
  
  static method e : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->e;
    }
    
    return $ok;
  }
  
  static method f : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->f;
    }
    
    return $ok;
  }
  
  static method g : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->g;
    }
    
    return $ok;
  }
  
  static method k : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->k;
    }
    
    return $ok;
  }
  
  static method l : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->lstat_raw($file, $stat);
    
    # Symbolic link
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->l;
    }
    
    return $ok;
  }
  
  static method o : int ($file : string) {
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->o;
    }
    return $ok;
  }
  
  static method p : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # FIFO/PIPE
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->p;
    }
    
    return $ok;
  }
  
  static method r : int ($file : string) {
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Character device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->r;
    }
    
    return $ok;
  }
  
  static method s : long ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new($file);
    
    my $size = $stat->s;
    
    return $size;
  }
  
  static method u : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Character device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->u;
    }
    
    return $ok;
  }
  
  static method w : int ($file : string) {
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Character device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->w;
    }
    
    return $ok;
  }
  
  static method x : int ($file : string) {
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new;
    my $status = Sys::IO::Stat->stat_raw($file, $stat);
    
    # Character device
    my $ok = 0;
    unless ($status == -1) {
      $ok = $stat->x;
    }
    
    return $ok;
  }
  
  static method z : int ($file : string) {
    
    unless ($file) {
      die "The file must be defined";
    }
    
    my $stat = Sys::IO::Stat->new($file);
    
    my $ok = $stat->z;
    
    return $ok;
  }
}