class TestCase::Sys::Ioctl {
  use Sys;
  use Sys::Socket;
  use Sys::Socket::Constant as SOCKET;
  use Sys::Socket::Sockaddr;
  use Sys::Socket::Sockaddr::In;
  use Sys::Process;
  use Sys::IO::Constant as IO;
  use Sys::Ioctl;
  use Sys::Ioctl::Constant as IOCTL;
  
  use TestUtil::SocketAutoClose;
  
  static method ioctl : int () {
    # Socket
    my $socket = Sys::Socket->socket(SOCKET->AF_INET, SOCKET->SOCK_STREAM, 0);
    
    unless ($socket> 0) {
      return 0;
    }

    # Close socket at the end of this scope
    my $socket_auto_close = TestUtil::SocketAutoClose->new($socket);
    
    my $value = (Int)1;
    my $status_ioctl = 0;
    eval { $status_ioctl = Sys::Ioctl->ioctl($socket, IOCTL->FIONBIO, $value); };
    
    if (Sys->defined("_WIN32")) {
      unless ($status_ioctl == 0) {
        return 0;
      }
    }
    else {
      if ($@) {
        warn "[Test Output]$@";
      }
      else {
        unless ($status_ioctl == 0) {
          return 0;
        }
      }
    }
    
    return 1;
  }
}
