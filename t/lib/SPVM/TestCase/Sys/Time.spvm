class TestCase::Sys::Time {
  use Sys::Time;
  use Sys::Time::Timeval;
  use Sys::Time::Timezone;
  use Sys::Time::Timespec;
  use Sys::Time::Constant as TIME;
  
  static method gettimeofday : int () {
    
    my $tv = Sys::Time::Timeval->new;
    my $tz = Sys::Time::Timezone->new;
    
    my $status = Sys::Time->gettimeofday($tv, $tz);
    
    unless ($status == 0) {
      return 0;
    }
    
    unless ($tv->tv_sec > 0) {
      return 0;
    }
    
    return 1;
  }

  static method clock : int () {
    
    my $tv = Sys::Time::Timeval->new;
    my $tz = Sys::Time::Timezone->new;
    
    my $cpu_time = Sys::Time->clock;
    
    unless ($cpu_time >= 0) {
      return 0;
    }
    
    return 1;
  }

  static method clock_gettime : int () {
    
    my $tp = Sys::Time::Timespec->new;
    
    my $status = Sys::Time->clock_gettime(TIME->CLOCK_REALTIME, $tp);
    
    unless ($status >= 0) {
      return 0;
    }
    
    unless ($tp->tv_sec >= 0) {
      return 0;
    }
    
    return 1;
  }
}
